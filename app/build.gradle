apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId "com.renovavision.rxmvp"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.renovavision.rxmvp.espresso.base.MockTestRunner"
        //testInstrumentationRunnerArgument "size", "small"

        buildConfigField "String", "GITHUB_BASE_URL", "\"https://api.github.com/\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dependencies {

        Map<String, String> dependencies = rootProject.ext.dependencies;

        compile dependencies.appCompat
        compile dependencies.supportDesign
        compile dependencies.cardView
        compile dependencies.recyclerView
        compile dependencies.retrofit
        compile dependencies.retrofitConverterGson
        compile dependencies.retrofitAdapterRxJava
        compile dependencies.okhttp
        compile dependencies.timber
        compile dependencies.loggingInterceptor
        compile dependencies.picasso
        compile dependencies.rxAndroid
        compile dependencies.butterknife

        compile dependencies.dagger
        apt dependencies.daggerCompiler
        provided dependencies.javaxAnnotation

        testApt dependencies.daggerCompiler
        testCompile dependencies.jUnit
        testCompile dependencies.mockito
        testCompile dependencies.robolectric
        testCompile dependencies.mockWebser

        androidTestApt dependencies.daggerCompiler
        androidTestCompile dependencies.espressoCore
        androidTestCompile(dependencies.espressoCotrib) {
            // Necessary to avoid version conflicts
            exclude group: 'com.android.support', module: 'appcompat'
            exclude group: 'com.android.support', module: 'support-v4'
            exclude group: 'com.android.support', module: 'support-annotations'
            exclude module: 'recyclerview-v7'
        }
        androidTestCompile dependencies.testRunner
        androidTestCompile dependencies.testRules
        androidTestCompile dependencies.supportAnnotation
        androidTestCompile dependencies.mockito
        androidTestCompile dependencies.mockWebser
        androidTestCompile dependencies.dexMaker
        androidTestCompile dependencies.dexMockito
    }

}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.1.201405082137"
}

def coverageSourceDirs = [
        '../app/src/main/java'
]

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',   //DI
                       '**/*_MembersInjector*.*',  //DI
                       '**/*_Factory*.*',  //DI
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/Lambda$*.class',
                       '**/Lambda.class',
                       '**/*Lambda.class',
                       '**/*Lambda*.class']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebugUnitTest.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}
